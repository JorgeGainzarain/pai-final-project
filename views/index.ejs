<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Index</title>
    <link rel="stylesheet" href="/styles/<%= theme %>.css">
    <script src="https://kit.fontawesome.com/bfe42d90a4.js" crossorigin="anonymous"></script>
    <script src="/dark-mode.js" defer></script>
</head>
<body>
    <div id="dark-mode-toggle">
        <button id="dark-mode-toggle-button">
            <i class="fa fa-moon"></i>
        </button>
    </div>
    <nav>
        <a href="#" data-tab="home" onclick="showHome()">Home</a>
        <a href="#" data-tab="stories" onclick="showStories()">Browse Stories</a>
        <% if (user) { %>
            <a href="#" data-tab="my-stories" onclick="showMyStories()">My Stories</a>
            <a href="#" data-tab="create-story" onclick="showCreateStory()">Create Story</a>
        <% } %>
        <div class="user-box" onclick="toggleDropdown()">
            <% if (user) { %>
                <span class="user-name"><%= user.username %></span>
            <% } else { %>
                <span class="user-name">Sign up</span>
            <% } %>
            <img src="/user.png" alt="User Icon" class="user-icon">
        </div>
        <div class="dropdown" id="userDropdown">
            <% if (user) { %>
                <a href="#" onclick="showProfile(undefined)">Profile</a>
                <a href="#" onclick="document.getElementById('logoutForm').submit();">Sign Out</a>
            <% } else { %>
                <a href="/login">Login</a>
                <a href="/signup">Sign Up</a>
            <% } %>
        </div>
    </nav>
    <div class="header" id="header"></div>
    <div class="content" id="content"></div>
    <form id="logoutForm" action="/logout" method="POST" style="display: none;">
        <button type="submit" class="logout-btn">Logout</button>
    </form>
    <script>
        function toggleDropdown() {
            const dropdown = document.getElementById('userDropdown');
            dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
        }

        function hideDropdown() {
            const dropdown = document.getElementById('userDropdown');
            dropdown.style.display = 'none';
        }

        function showHome() {
            const header = document.getElementById('header');
            const content = document.getElementById('content');
            header.innerHTML = `<% if (user) { %>
                <h1>Welcome, <%= user.fullName %></h1>
                <p class="welcome-message">We're glad to have you back!</p>
            <% } else { %>
                <h1>Welcome, Guest</h1>
                <p class="welcome-message">Please log in to access more features.</p>
            <% } %>`;
            content.innerHTML = '<p>This is your dashboard where you can manage your account, view your profile. Explore the options above to get started.</p>';
        }

        function showProfile(userId) {
            localStorage.setItem('currentTab', 'profile');
            localStorage.setItem('profileId', userId);
            if (userId === undefined) {
                userId = '<%= user ? user.id : '' %>';
            }
            if (!userId) {
                alert('Please log in to view your profile.');
                return;
            }

            fetch(`/user/${userId}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('header').innerHTML = '';
                    document.getElementById('content').innerHTML = html;
                    const storyItems = document.querySelectorAll('.story-item');
                    storyItems.forEach(item => {
                        item.addEventListener('click', () => {
                            const storyId = item.getAttribute('data-story-id');
                            showStory(storyId);
                        });
                    });
                    hideDropdown();
                })
                .catch(error => {
                    console.error('Error fetching profile:', error);
                });
        }

        async function showStory(storyId) {
            const currentTab = localStorage.getItem('currentTab');
            if (currentTab !== 'story') {
                localStorage.setItem('lastTab', currentTab);
            }
            localStorage.setItem('currentStoryId', storyId);
            localStorage.setItem('currentTab', 'story');

            fetch(`/story/${storyId}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('header').innerHTML = '';
                    document.getElementById('content').innerHTML = html;

                    const backButton = document.querySelector('.back-button');
                    backButton.addEventListener('click', (event) => {
                        event.preventDefault();
                        goBack();
                    });

                    const profileButtons = document.querySelectorAll('.story-author');
                    profileButtons.forEach(button => {
                        button.addEventListener('click', (event) => {
                            event.preventDefault();
                            const userId = button.getAttribute('data-user-id');
                            showProfile(userId);
                        });
                    });

                    const editButton = document.querySelector('.edit-button');
                    editButton.addEventListener('click', (event) => {
                        const user = '<%= user %>';
                        if (!user) {
                            alert('Please log in to edit the story.');
                            return;
                        }
                        event.preventDefault();
                        const storyId = editButton.getAttribute('data-story-id');
                        showEditForm(storyId);
                    });

                    addStarRatingListeners(storyId);
                });
        }

        async function showEditForm(storyId) {
            localStorage.setItem('currentTab', 'edit-story');
            fetch(`/editStory/${storyId}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('header').innerHTML = '<h1>Edit Story</h1>';
                    document.getElementById('content').innerHTML = html;
                })
                .catch(error => {
                    console.error('Error fetching edit form:', error);
                });
        }

        function goBack() {
            const lastTab = localStorage.getItem('lastTab');
            const currentStoryId = localStorage.getItem('currentStoryId');
            const currProfileId = localStorage.getItem('profileId');

            switch (lastTab) {
                case 'home':
                    showHome();
                    break;
                case 'stories':
                    showStories();
                    break;
                case 'my-stories':
                    showMyStories();
                    break;
                case 'create-story':
                    showCreateStory();
                    break;
                case 'profile':
                    if (currProfileId) {
                        showProfile(currProfileId);
                    } else {
                        showHome();
                    }
                    break;
                case 'story':
                    if (currentStoryId) {
                        showStory(currentStoryId);
                    } else {
                        showHome();
                    }
                    break;
                default:
                    showHome();
            }
            localStorage.setItem('currentTab', lastTab);
        }

        async function showStories() {
            fetch('/showStories')
                .then(response => response.text())
                .then(html => {
                    document.getElementById('header').innerHTML = '<h1>Browse Stories</h1>';
                    document.getElementById('content').innerHTML = html;

                    const storyLinks = document.querySelectorAll('.story-box');
                    storyLinks.forEach(link => {
                        link.addEventListener('click', (event) => {
                            event.preventDefault();
                            const storyId = link.getAttribute('href').split('/').pop();
                            showStory(storyId);
                        });
                    });
                });
        }

        async function showMyStories() {
            fetch('/myStories')
                .then(response => response.text())
                .then(html => {
                    document.getElementById('header').innerHTML = '<h1>My Stories</h1>';
                    document.getElementById('content').innerHTML = html;

                    const storyLinks = document.querySelectorAll('.story-box');
                    storyLinks.forEach(link => {
                        link.addEventListener('click', (event) => {
                            event.preventDefault();
                            const storyId = link.getAttribute('href').split('/').pop();
                            showStory(storyId);
                        });
                    });
                });
        }

        function showCreateStory() {
            fetch('/createStory')
                .then(response => response.text())
                .then(html => {
                    document.getElementById('header').innerHTML = '<h1>Create a New Story</h1>';
                    document.getElementById('content').innerHTML = html;
                });
        }


        function addStarRatingListeners(storyId) {
            const stars = document.querySelectorAll('#starRating .fa-star');
            stars.forEach(star => {
                star.addEventListener('mouseover', () => {
                    const value = star.getAttribute('data-value');
                    stars.forEach(s => {
                        if (s.getAttribute('data-value') <= value) {
                            s.classList.remove('far');
                            s.classList.add('fas');
                        } else {
                            s.classList.remove('fas');
                            s.classList.add('far');
                        }
                    });
                });

                star.addEventListener('click', () => {
                    const user = '<%= user %>';
                    if (!user) {
                        alert('Please log in to rate the story.');
                        return;
                    }

                    const value = star.getAttribute('data-value');
                    // Here you can add code to save the rating to the server
                    console.log(storyId, value);
                    fetch(`/rateStory/${storyId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ score: parseInt(value, 10) })
                    })
                        .then(response => {
                            if (response.status === 400) {
                                alert('You have already rated this story.');
                                return;
                            }
                            stars.forEach(s => {
                                if (s.getAttribute('data-value') <= value) {
                                    s.classList.remove('far');
                                    s.classList.add('fas');
                                } else {
                                    s.classList.remove('fas');
                                    s.classList.add('far');
                                }
                            });
                            alert(`You rated this story ${value} stars!`);
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('An error occurred while rating the story.');
                        });
                });
            });

            document.querySelector('.star-rating').addEventListener('mouseleave', () => {
                stars.forEach(star => {
                    star.classList.remove('fas');
                    star.classList.add('far');
                });
            });
        }


        document.addEventListener('DOMContentLoaded', () => {
            const tabs = document.querySelectorAll('nav a[data-tab]');
            const currentTab = localStorage.getItem('currentTab') || 'home';
            const currentStoryId = localStorage.getItem('currentStoryId');
            const currProfileId = localStorage.getItem('profileId');

            function showTab(tabName) {
                tabs.forEach(tab => tab.classList.remove('active-tab'));

                switch (tabName) {
                    case 'home':
                        showHome();
                        break;
                    case 'stories':
                        showStories();
                        break;
                    case 'my-stories':
                        showMyStories();
                        break;
                    case 'create-story':
                        showCreateStory();
                        break;
                    case 'profile':
                        if (currProfileId) {
                            showProfile(currProfileId);
                        } else {
                            showHome();
                        }
                        break;
                    case 'story':
                        if (currentStoryId) {
                            showStory(currentStoryId);
                        } else {
                            showHome();
                        }
                        break;
                    default:
                        showHome();
                }

                const activeTab = document.querySelector(`nav a[data-tab="${tabName}"]`);
                if (activeTab) {
                    activeTab.classList.add('active-tab');
                }
            }

            showTab(currentTab);

            tabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    const tabName = tab.getAttribute('data-tab');
                    localStorage.setItem('currentTab', tabName);
                    localStorage.removeItem('currentStoryId');
                    showTab(tabName);
                });
            });

            const hiddenTabs = ['profile', 'story'];
            hiddenTabs.forEach(tabName => {
                if (currentTab === tabName) {
                    showTab(tabName);
                }
            });
        });
    </script>
</body>
</html>